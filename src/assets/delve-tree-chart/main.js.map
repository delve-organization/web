{"version":3,"sources":["webpack:///./projects/delve-tree-chart-api/src/lib/delve-tree-chart-api.constants.ts","webpack:///./projects/delve-tree-chart-api/src/public_api.ts","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/material.module.ts","webpack:///./src/app/node.ts","webpack:///./src/app/tree-node/tree-node.component.html","webpack:///./src/app/tree-node/tree-node.component.scss","webpack:///./src/app/tree-node/tree-node.component.ts","webpack:///./src/app/tree/tree.component.html","webpack:///./src/app/tree/tree.component.scss","webpack:///./src/app/tree/tree.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Key } from '@ping/pi-iframe';\r\nimport { NodeData, UserNodeRelationData } from './delve-tree-chart-api.types';\r\n\r\nexport const APP_LOADED_KEY: Key<{}> = { key: 'APP_LOADED_KEY' };\r\nexport const NODE_DATA_INPUT_KEY: Key<NodeData> = { key: 'NODE_DATA_INPUT_KEY' };\r\nexport const USER_NODE_RELATION_DATA_INPUT_KEY: Key<UserNodeRelationData[]> = { key: 'USER_NODE_RELATION_DATA_INPUT_KEY' };\r\nexport const USER_NODE_RELATION_DATA_CHANGE_KEY: Key<UserNodeRelationData> = { key: 'USER_NODE_RELATION_DATA_CHANGE_KEY' };\r\n","/*\n * Public API Surface of delve-tree-chart-api\n */\n\nexport * from './lib/delve-tree-chart-api.types';\nexport * from './lib/delve-tree-chart-api.constants';\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<pi-iframe #piIframe>\\n    <div class=\\\"tree-container\\\">\\n        <delve-tree *ngIf=\\\"node && relations\\\" class=\\\"tree-view\\\" [piIframe]=\\\"piIframe\\\" [nodeData]=\\\"node\\\" [relationsData]=\\\"relations\\\"></delve-tree>\\n    </div>\\n</pi-iframe>\\n\"","module.exports = \".tree-container {\\n  padding: 16px;\\n  text-align: center;\\n  min-height: -webkit-fit-content;\\n  min-height: -moz-fit-content;\\n  min-height: fit-content;\\n  height: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvUzpcXGRldlxcYW5ndWxhclxcZGVsdmUtdHJlZS1jaGFydC9zcmNcXGFwcFxcYXBwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtFQUNiLGtCQUFrQjtFQUNsQiwrQkFBdUI7RUFBdkIsNEJBQXVCO0VBQXZCLHVCQUF1QjtFQUN2QixZQUFZLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudHJlZS1jb250YWluZXIge1xyXG4gIHBhZGRpbmc6IDE2cHg7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIG1pbi1oZWlnaHQ6IGZpdC1jb250ZW50O1xyXG4gIGhlaWdodDogMTAwJTtcclxufVxyXG4iXX0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { PiIframeComponent } from '@ping/pi-iframe';\nimport { NodeData, NODE_DATA_INPUT_KEY, UserNodeRelationData, USER_NODE_RELATION_DATA_INPUT_KEY, APP_LOADED_KEY } from 'projects/delve-tree-chart-api/src/public_api';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  @ViewChild('piIframe', { read: PiIframeComponent }) piIframe: PiIframeComponent;\n\n  node: NodeData;\n  relations: UserNodeRelationData[];\n\n  ngOnInit() {\n    this.piIframe.post<{}>(APP_LOADED_KEY, {});\n\n    this.piIframe.listen<NodeData>(NODE_DATA_INPUT_KEY, (node: NodeData) => {\n      this.node = node;\n    });\n    this.piIframe.listen<UserNodeRelationData[]>(USER_NODE_RELATION_DATA_INPUT_KEY, (relations: UserNodeRelationData[]) => {\n      this.relations = relations;\n    });\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { TreeComponent } from './tree/tree.component';\nimport { TreeNodeComponent } from './tree-node/tree-node.component';\nimport { PiLeaderLineModule } from '@ping/pi-leader-line';\nimport { PiTreeChartModule } from '@ping/pi-tree-chart';\nimport { PiIframeModule } from '@ping/pi-iframe';\nimport { MaterialModule } from './material.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TreeComponent,\n    TreeNodeComponent\n  ],\n  imports: [\n    BrowserModule,\n    MaterialModule,\n    PiLeaderLineModule,\n    PiTreeChartModule,\n    PiIframeModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\r\nimport {\r\n    MatIconModule,\r\n    MatButtonModule\r\n} from '@angular/material';\r\n\r\n@NgModule({\r\n    imports: [\r\n        MatIconModule,\r\n        MatButtonModule\r\n    ],\r\n    exports: [\r\n        MatIconModule,\r\n        MatButtonModule\r\n    ]\r\n})\r\nexport class MaterialModule {\r\n}\r\n","import {PiTreeChartNodeComponent} from '@ping/pi-tree-chart';\r\n\r\nexport class Node {\r\n\r\n  private _id: number;\r\n  private _title: string;\r\n  private _description: string;\r\n  private _imageUrl: string;\r\n  private _parent: Node;\r\n  private _children: Array<Node>;\r\n  private _visited: boolean;\r\n  private _nodeComponent: PiTreeChartNodeComponent;\r\n\r\n  constructor(id: number, title: string, description: string, imageFile: string, parent: Node, children: Array<Node>) {\r\n    this._id = id;\r\n    this._title = title;\r\n    this._description = description;\r\n    this._imageUrl = imageFile;\r\n    this._parent = parent;\r\n    this._children = children;\r\n    this._visited = false;\r\n  }\r\n\r\n  get id(): number {\r\n    return this._id;\r\n  }\r\n\r\n  get title(): string {\r\n    return this._title;\r\n  }\r\n\r\n  get description(): string {\r\n    return this._description;\r\n  }\r\n\r\n  get imageUrl(): string {\r\n    return this._imageUrl;\r\n  }\r\n\r\n  get parent(): Node {\r\n    return this._parent;\r\n  }\r\n\r\n  get children(): Array<Node> {\r\n    return this._children;\r\n  }\r\n\r\n  get visited(): boolean {\r\n    return this._visited;\r\n  }\r\n\r\n  public setChildren(children: Array<Node>): void {\r\n    this._children = children;\r\n  }\r\n\r\n  public setVisited(visited: boolean): void {\r\n    this._visited = visited;\r\n    if (this.parent) {\r\n      this.parent.updateVisitedStatus();\r\n    }\r\n  }\r\n\r\n  public setNodeComponent(nodeComponent: PiTreeChartNodeComponent): void {\r\n    this._nodeComponent = nodeComponent;\r\n  }\r\n\r\n  public updateComponent(recursive?: boolean): void {\r\n    if (this.visited) {\r\n      this._nodeComponent.setParentConnector({color: 'gray', dash: true});\r\n    } else {\r\n      this._nodeComponent.setParentConnector({color: 'green', dash: false});\r\n    }\r\n    if (recursive && this.parent) {\r\n      this.parent.updateComponent(recursive);\r\n    }\r\n  }\r\n\r\n  private updateVisitedStatus(): void {\r\n    const isAllChildrenVisited: boolean = this.children && this.children.length ?\r\n      this.children.every(child => child.visited) : false;\r\n    this.setVisited(isAllChildrenVisited);\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"node\\\" [class.visited]=\\\"node.visited\\\">\\n  <div class=\\\"mat-body-strong\\\">id: {{node.id}}</div>\\n  <div class=\\\"mat-body-strong\\\">{{node.title}}</div>\\n  <div class=\\\"mat-caption\\\">{{node.description}}</div>\\n\\n  <div *ngIf=\\\"node.imageUrl\\\">\\n    <img [src]=\\\"node.imageUrl\\\" (load)=\\\"imageLoaded()\\\" class=\\\"node-image\\\">\\n  </div>\\n\\n  <div *ngIf=\\\"node.children && node.children.length > 0\\\">\\n    <button mat-icon-button (click)=\\\"toggleChildren()\\\">\\n      <mat-icon>{{showChildren ? 'remove' : 'add'}}</mat-icon>\\n    </button>\\n  </div>\\n  <div *ngIf=\\\"!node.children || node.children.length === 0\\\">\\n    <button mat-icon-button (click)=\\\"toggleVisitedStatus()\\\">\\n      <mat-icon>{{node.visited ? 'visibility_off' : 'visibility'}}</mat-icon>\\n    </button>\\n  </div>\\n</div>\\n\"","module.exports = \".node {\\n  border: 4px solid green;\\n  border-radius: 15px;\\n  background: repeating-linear-gradient(45deg, rgba(0, 128, 0, 0.1), rgba(0, 128, 0, 0.1) 10px, rgba(0, 128, 0, 0.3) 10px, rgba(0, 128, 0, 0.3) 20px);\\n  margin: 0 3px; }\\n  .node.visited {\\n    border: 4px dashed gray;\\n    background: repeating-linear-gradient(45deg, rgba(128, 128, 128, 0.1), rgba(128, 128, 128, 0.1) 10px, rgba(128, 128, 128, 0.3) 10px, rgba(128, 128, 128, 0.3) 20px); }\\n  .node-image {\\n  max-width: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdHJlZS1ub2RlL1M6XFxkZXZcXGFuZ3VsYXJcXGRlbHZlLXRyZWUtY2hhcnQvc3JjXFxhcHBcXHRyZWUtbm9kZVxcdHJlZS1ub2RlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQVVBO0VBQ0UsdUJBQXVCO0VBQ3ZCLG1CQUFtQjtFQUNuQixtSkFOQztFQU9ELGFBQWEsRUFBQTtFQUpmO0lBT0ksdUJBQXVCO0lBQ3ZCLG1LQVhELEVBQUE7RUFlSDtFQUNFLGVBQWUsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3RyZWUtbm9kZS90cmVlLW5vZGUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAZnVuY3Rpb24gc2V0LWJhY2tncm91bmQoJGNvbG9yKSB7XHJcbiAgQHJldHVybiByZXBlYXRpbmctbGluZWFyLWdyYWRpZW50KFxyXG4gICAgICA0NWRlZyxcclxuICAgICAgcmdiYSgkY29sb3IsIDAuMSksXHJcbiAgICAgIHJnYmEoJGNvbG9yLCAwLjEpIDEwcHgsXHJcbiAgICAgIHJnYmEoJGNvbG9yLCAwLjMpIDEwcHgsXHJcbiAgICAgIHJnYmEoJGNvbG9yLCAwLjMpIDIwcHhcclxuICApO1xyXG59XHJcblxyXG4ubm9kZSB7XHJcbiAgYm9yZGVyOiA0cHggc29saWQgZ3JlZW47XHJcbiAgYm9yZGVyLXJhZGl1czogMTVweDtcclxuICBiYWNrZ3JvdW5kOiBzZXQtYmFja2dyb3VuZChncmVlbik7XHJcbiAgbWFyZ2luOiAwIDNweDtcclxuXHJcbiAgJi52aXNpdGVkIHtcclxuICAgIGJvcmRlcjogNHB4IGRhc2hlZCBncmF5O1xyXG4gICAgYmFja2dyb3VuZDogc2V0LWJhY2tncm91bmQoZ3JheSk7XHJcbiAgfVxyXG59XHJcblxyXG4ubm9kZS1pbWFnZSB7XHJcbiAgbWF4LXdpZHRoOiAxMDAlO1xyXG59XHJcbiJdfQ== */\"","import { AfterViewInit, Component, Input, OnInit } from '@angular/core';\nimport { Node } from '../node';\nimport { PiTreeChartNodeComponent } from '@ping/pi-tree-chart';\nimport { UserNodeRelationData, USER_NODE_RELATION_DATA_CHANGE_KEY } from 'projects/delve-tree-chart-api/src/public_api';\nimport { PiIframeComponent } from '@ping/pi-iframe';\n\n@Component({\n  selector: 'delve-tree-node',\n  templateUrl: './tree-node.component.html',\n  styleUrls: ['./tree-node.component.scss']\n})\nexport class TreeNodeComponent implements OnInit, AfterViewInit {\n\n  @Input() piIframe: PiIframeComponent;\n  @Input() node: Node;\n  @Input() component: PiTreeChartNodeComponent;\n\n  showChildren: boolean;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    this.showChildren = this.node.parent === undefined;\n    this.piIframe.listen<UserNodeRelationData>(USER_NODE_RELATION_DATA_CHANGE_KEY, (relation: UserNodeRelationData) => {\n      if (this.node.id === relation.nodeId) {\n        this.node.setVisited(relation.visited);\n        this.node.updateComponent(true);\n      }\n    });\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.node.setNodeComponent(this.component);\n      this.node.updateComponent();\n    });\n  }\n\n  toggleVisitedStatus(): void {\n    this.piIframe.post<UserNodeRelationData>(USER_NODE_RELATION_DATA_CHANGE_KEY, {\n      nodeId: this.node.id,\n      visited: !this.node.visited\n    });\n  }\n\n  toggleChildren(): void {\n    this.showChildren = !this.showChildren;\n    if (this.showChildren === true) {\n      this.component.showChildren();\n    } else {\n      this.component.hideChildren();\n    }\n  }\n\n  imageLoaded(): void {\n    this.component.rePositionChildConnectors(true);\n  }\n}\n","module.exports = \"<pi-tree-chart #tree\\n               [datasource]=\\\"datasource\\\"\\n               [nodeTemplateOutlet]=\\\"nodeTemplate\\\"\\n               [lineOptions]=\\\"lineOptions\\\"\\n               [verticalSpace]=\\\"75\\\"\\n               [levelLimit]=\\\"1\\\"\\n>\\n  <ng-template #nodeTemplate let-context=\\\"context\\\" let-component=\\\"node\\\">\\n      <delve-tree-node [piIframe]=\\\"piIframe\\\" [node]=\\\"context\\\" [component]=\\\"component\\\"></delve-tree-node>\\n  </ng-template>\\n</pi-tree-chart>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RyZWUvdHJlZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport { Node } from '../node';\nimport { PiLeaderLineOptions, PiLeaderLinePath, PiLeaderLineSocket } from '@ping/pi-leader-line';\nimport { PiTreeChartComponent } from '@ping/pi-tree-chart';\nimport { NodeData, UserNodeRelationData } from 'projects/delve-tree-chart-api/src/public_api';\nimport { PiIframeComponent } from '@ping/pi-iframe';\n\n@Component({\n  selector: 'delve-tree',\n  templateUrl: './tree.component.html',\n  styleUrls: ['./tree.component.scss']\n})\nexport class TreeComponent implements OnInit {\n\n  @Input() piIframe: PiIframeComponent;\n  @Input() nodeData: NodeData;\n  @Input() relationsData: UserNodeRelationData[];\n\n  @ViewChild('tree', { read: PiTreeChartComponent }) tree: PiTreeChartComponent;\n\n  datasource: Node;\n  relationsByNodeId: { [key: number]: UserNodeRelationData } = {};\n\n  readonly lineOptions: PiLeaderLineOptions = {\n    startSocket: PiLeaderLineSocket.BOTTOM,\n    endSocket: PiLeaderLineSocket.TOP,\n    endSocketGravity: [0, -50],\n    path: PiLeaderLinePath.FLUID,\n    color: 'green',\n    dropShadow: {\n      opacity: 0.2\n    }\n  };\n\n  constructor() { }\n\n  ngOnInit() {\n    this.relationsData = this.relationsData ? this.relationsData : [];\n    this.datasource = this.createOrgChartDataFrom(this.nodeData);\n    this.mapRelationsByNodeId();\n    this.initializeRelations(this.datasource);\n  }\n\n  private createOrgChartDataFrom(nodeDto: NodeData, parentNode?: Node): Node {\n    const node: Node = new Node(nodeDto.id, nodeDto.title, nodeDto.description, nodeDto.imageUrl, parentNode, null);\n    const children: Node[] = nodeDto.children.map(childNode => this.createOrgChartDataFrom(childNode, node));\n    node.setChildren(children);\n\n    return node;\n  }\n\n  private mapRelationsByNodeId(): void {\n    this.relationsData.forEach(relation => {\n      this.relationsByNodeId[relation.nodeId] = relation;\n    });\n  }\n\n  private initializeRelations(node: Node): void {\n    node.children.forEach(child => this.initializeRelations(child));\n    if (this.relationsByNodeId[node.id]) {\n      node.setVisited(this.relationsByNodeId[node.id].visited);\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}